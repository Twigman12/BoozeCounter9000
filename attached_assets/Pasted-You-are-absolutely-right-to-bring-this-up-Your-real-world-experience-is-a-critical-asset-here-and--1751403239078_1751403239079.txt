You are absolutely right to bring this up. Your real-world experience is a critical asset here, and it's highlighting a major practical challenge that can't be ignored. This is exactly the kind of feedback that saves projects from failure.

You are 100% correct: AI Computer Vision cannot see through an opaque bottle.

If a human can't see the liquid level by looking at the bottle, a standard camera and vision AI can't either. This is a hard physical constraint. Opaque bottles (like many liqueurs such as Baileys, Kahlua, Campari, or certain ceramic gin/tequila bottles) represent a significant "edge case" that would cause a purely visual AI system to fail.

So, where does that leave us? Let's break this down.

1. Acknowledging the Limitation and Sizing the Problem

First, we acknowledge the limitation head-on. The "AI Visual Volume Estimation" feature will not work for opaque bottles.

The next strategic question is: How much of the problem does this represent?

For a typical bar, what percentage of open, high-turnover liquor bottles are opaque vs. transparent/translucent?

Many of the most common liquors (vodka, most gins, whiskeys, rums, tequilas) come in clear or translucent bottles where the liquid level is visible.

Many high-cost liqueurs, cream-based spirits, and some specialty spirits are opaque.

Conclusion: The visual AI approach can still solve the problem for a large majority (perhaps 70-85%) of a typical bar's inventory, but it cannot be a 100% solution.

This means the app MUST have a seamless, elegant fallback for opaque bottles.

2. Designing a "Hybrid" Solution: The AI-Assisted Workflow with a Manual Fallback

Your app doesn't have to be "AI-only" or "manual-only." The best professional tools handle edge cases gracefully. The workflow can adapt.

Here's the refined, more realistic AI-enhanced flow:

User scans a bottle (e.g., Absolut Vodka).

App recognizes the product. Because it knows this is a transparent bottle, it presents the "Estimate with Camera (AI ✨)" button as the primary option. User takes a photo, AI suggests "0.45", user confirms.

User scans the next bottle (e.g., Kahlua).

App recognizes the product. The system's product data includes a simple flag: is_opaque: true.

The app is now smart! It knows visual estimation is impossible. Instead of showing the "Estimate with Camera" button, the UI adapts:

It immediately presents the optimized numeric keypad.

It might display a small message: "Opaque bottle detected. Please enter quantity manually."

User falls back to the "old" (but still fast) way: They eyeball the weight/feel of the bottle or make an educated guess, and type "0.5" into your optimized keypad.

The Value Proposition Here:

The AI still handles the majority of tedious partial bottle counts automatically, saving significant time and improving accuracy where possible.

The system doesn't fail or frustrate the user when it encounters an opaque bottle; it intelligently reverts to the fastest possible manual input method.

The user gets the best of both worlds: AI assistance for most of their inventory and a fast, digital, manual entry for the rest.

3. The "Smart Scale" Idea Revisited (Hardware - The Ultimate Solution)

You are also right about the scale. A "weight-based" system is the ultimate ground truth. It's the only way to know the exact amount in an opaque bottle without pouring it out.

Your MVP Doesn't Need It: You do not need to build hardware for your MVP.

The "Ecosystem" Play (Long-Term Strategy): A very advanced version of your app could integrate with Bluetooth-enabled kitchen scales.

The workflow could be: App recognizes an opaque bottle → "Opaque bottle detected. Place on scale?" → User places bottle on scale → Scale transmits weight to app via Bluetooth → App subtracts the known "tare weight" (empty bottle weight) from its database → App calculates and records the exact remaining liquid volume based on density.

Why this is a V3 or V4 feature: This introduces hardware, Bluetooth pairing, and a much more complex user interaction. But it's good to keep in your back pocket as the "holy grail" solution for ultimate accuracy.

Conclusion & The Path Forward

Your real-world experience didn't invalidate the AI feature—it made it smarter and more realistic.

Your app still has immense AI potential. The AI feature just needs to be smart enough to know when it can't work.

The path forward is a hybrid approach. Build the visual AI to solve the problem for the 70-85% of transparent bottles. Build a seamless and fast manual fallback for the remaining opaque ones.

This hybrid model is a much stronger, more defensible, and more practical product because you've thought through the edge cases. You're not selling impossible magic; you're selling intelligent assistance where it's possible and a fast, efficient tool where it's not.

This nuance makes your product vision more impressive, not less.